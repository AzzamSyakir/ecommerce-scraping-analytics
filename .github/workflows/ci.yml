name: CI Pipeline

on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create .env file
        run: |
          cat <<EOF > .env
          GIN_MODE=${{ secrets.GIN_MODE }}
          GATEWAY_APP_HOST=${{ secrets.GATEWAY_APP_HOST }}
          GATEWAY_APP_PORT=${{ secrets.GATEWAY_APP_PORT }}
          POSTGRES_HOST=${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT=${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB=${{ secrets.POSTGRES_DB }}
          POSTGRES_NEED=${{ secrets.POSTGRES_NEED }}
          SWAGGER_PORT=${{ secrets.SWAGGER_PORT }}
          RABBITMQ_HOST=${{ secrets.RABBITMQ_HOST }}
          RABBITMQ_PORT=${{ secrets.RABBITMQ_PORT }}
          RABBITMQ_USER=${{ secrets.RABBITMQ_USER }}
          RABBITMQ_PASSWORD=${{ secrets.RABBITMQ_PASSWORD }}
          RABBITMQ_MANAGEMENT_PORT=${{ secrets.RABBITMQ_MANAGEMENT_PORT }}
          RABBITMQ_QUEUE_NAMES=${{ secrets.RABBITMQ_QUEUE_NAMES }}
          EOF

      - name: Login to DockerHub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
      - name: Build Docker images
        run: |
          docker build -f deployments/dockerfile -t bukanasa/ecommerce-scraping-analytics:latest .

      - name: Push Docker image to DockerHub
        run: |
          docker push bukanasa/ecommerce-scraping-analytics
